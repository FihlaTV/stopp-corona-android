name: Build and deploy stageApi QA version

# Trigger on push
on:
  push:
    branches:
      - release*
      - task/CTAA-1329_set_up_CI_pipelines # TODO just for testing

jobs:
  build_and_archive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Add secrets to the project to be buildable
      - name: Prepare secrets
        env:
          DEBUG_KEYSTORE_FILE_BASE64: ${{ secrets.DEBUG_KEYSTORE_FILE_BASE64 }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
          GOOGLE_SERVICES_PROD: ${{ secrets.GOOGLE_SERVICES_PROD }}
          GOOGLE_SERVICES_STAGE: ${{ secrets.GOOGLE_SERVICES_STAGE }}
        run: |
          mkdir ./keystore
          mkdir ./app/src/prodApi
          mkdir ./app/src/stageApi
          echo "$DEBUG_KEYSTORE_FILE_BASE64" | base64 -d > ./keystore/android_debug.keystore
          echo "$LOCAL_PROPERTIES" > ./local.properties
          echo "$GOOGLE_SERVICES_PROD" > ./app/src/prodApi/google-services.json
          echo "$GOOGLE_SERVICES_STAGE" > ./app/src/stageApi/google-services.json
      # TODO Set git tag
      # Build QA version
      - name: Build QA version
        run: ./gradlew clean assembleStageApiBeta
      # Prepare apk and mapping file
      - name: Prepare artifacts
        run: |
          mkdir ./output
          OUTPUT_PATH=./app/build/outputs
          VERSION_NAME=`cat $OUTPUT_PATH/apk/stageApi/beta/output.json | jq '.[].apkData.versionName' | tr -d '"'`
          mv $OUTPUT_PATH/apk/stageApi/beta/app-stageApi-beta.apk ./output/$VERSION_NAME.apk
          mv $OUTPUT_PATH/mapping/stageApi/beta/mapping.txt ./output/$VERSION_NAME_mapping.txt
      # Save APK and mapping file to artifacts
      - name: Archive outputs to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: QA_build
          path: ./output
    # TODO upload to appCenter